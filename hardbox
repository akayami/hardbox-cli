#!/usr/bin/env node

const program = require('commander');
const path = require('path');
const request = require('request');
const fs = require('fs');
const {
	URL
} = require('url');

program
	.version('0.0.1')
	.option('-s, --server <hostname>', 'Specify hostname or socket file')
	//	.option('-p --port <port>', 'Specify Port')
	.command('vhost', 'Managment of vhosts')
	.command('generate', 'Generates main config file')
	.command('start', 'Start hardbox server')
	.command('reload')
	.action(function() {
		try {
			if(!program.server) {
				program.server = '/run/hardbox.sock';
			}
			try {
				url = new URL('/reload', program.server);
				url = url.toString();
			} catch(e) {
				url = `http://unix:${program.server}:/reload`
			}
			request.get(url, function(error, response, body) {
				if (error) {
					console.error(error);
				} else {
					if (response.statusCode == 200) {
						console.log(body);
					} else {
						console.error('Invalid response code: ' + response.statusCode);
					}
				}
			});
		} catch(e) {
			throw e;
		}
	})
program.parse(process.argv);
